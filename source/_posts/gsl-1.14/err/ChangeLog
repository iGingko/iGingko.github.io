2004-07-10  Brian Gough  <bjg@network-theory.co.uk>

	* error.c (gsl_error): flush stdout/stderr before aborting (needed
	to get a useful error message on some platforms)

2003-06-17  Brian Gough  <bjg@network-theory.co.uk>

	* warn.c: removed, the functions are not used

Sat Apr 27 21:27:32 2002  Brian Gough  <bjg@network-theory.co.uk>

	* error.c (gsl_error): added an explanatory message in the default
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	error handler before aborting
=======
	error handler before aborting
>>>>>>> config

Tue Jun 12 11:52:23 2001  Brian Gough  <bjg@network-theory.co.uk>

	* gsl_errno.h (GSL_STATUS_UPDATE): added macro for updating
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	status value multiple times
=======
	status value multiple times
>>>>>>> config

Fri Apr 27 18:18:59 2001  Brian Gough  <bjg@network-theory.co.uk>

	* gsl_errno.h (GSL_ERROR_NULL): added macro which returns NULL,
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	for out of memory conditions
=======
	for out of memory conditions
>>>>>>> config

Mon Jan 22 16:01:55 2001  Brian Gough  <bjg@network-theory.co.uk>

	* gsl_errno.h: added EOF for end of file

Sat Aug 26 19:26:59 2000  Brian Gough  <bjg@network-theory.co.uk>

	* gsl_errno.h: added error codes ETOLF, ETOLX, ETOLG for
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	unattainable tolerances in (F,X,G) in multimin MINPACK LM
 	algorithm.
=======
	unattainable tolerances in (F,X,G) in multimin MINPACK LM
	algorithm.
>>>>>>> config

Fri May  5 11:20:10 2000  Brian Gough  <bjg@network-theory.co.uk>

	* split gsl_test code out into separate test/ directory

Sun Nov 28 17:17:03 1999  Brian Gough  <bjg@network-theory.co.uk>

	* gsl_errno.h: added GSL_ENOPROG and GSL_ENOPROGJ to handle error
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	conditions from minpack hybrid algorithms (INFO=5,4 in the
 	original code)
=======
	conditions from minpack hybrid algorithms (INFO=5,4 in the
	original code)
>>>>>>> config

Thu Oct 28 14:41:31 1999  Brian Gough  <bjg@network-theory.co.uk>

	* gsl_test.h: changed variable name in prototype for clarity

Thu Oct  7 11:46:53 1999  Brian Gough  <bjg@network-theory.co.uk>

	* test_results.c (gsl_test_str): changed #if __STDC__ to #ifdef
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	__STDC__ so the code will compile with compilers that define
 	__STDC__ to 0 meaning STDC+extensions.
=======
	__STDC__ so the code will compile with compilers that define
	__STDC__ to 0 meaning STDC+extensions.
>>>>>>> config

Sun Jul 11 21:48:25 1999  Brian Gough  <bjg@network-theory.co.uk>

	* test_errnos.c (main): added GSL_ECACHE to handle internal cache
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	structures which grow and can hit a limit
=======
	structures which grow and can hit a limit
>>>>>>> config

Sun Mar  7 17:00:08 1999  Brian Gough  <bjg@netsci.freeserve.co.uk>

	* gsl_errno.h, test_errnos.c, strerror.c: added GSL_EDIVERGE for
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	divergent integrals and series
=======
	divergent integrals and series
>>>>>>> config

Sat Feb 20 12:14:47 1999  Brian Gough  <bjg@netsci.freeserve.co.uk>

	* test_errnos.c (main): added the new error codes to the tests

	* gsl_errno.h: moved all the error codes into a single enum
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	instead of having a separate enum for GSL_SUCCESS and GSL_FAILURE
=======
	instead of having a separate enum for GSL_SUCCESS and GSL_FAILURE
>>>>>>> config

Fri Feb 19 15:56:15 1999  Brian Gough  <bjg@netsci.freeserve.co.uk>

	* gsl_errno.h, strerror.c: added GSL_CONTINUE as an error code
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	indicating that an iteration process has not converged and should
 	be continued for more iterations.
=======
	indicating that an iteration process has not converged and should
	be continued for more iterations.
>>>>>>> config

Tue Nov 17 17:11:31 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* gsl_test.h: removed #include <config.h> which should not be
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	present in installed header files
=======
	present in installed header files
>>>>>>> config

Tue Nov 10 15:55:56 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* test_results.c (gsl_test_abs), gsl_test.h: added gsl_test_abs
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	for absolute errors, like gsl_test_rel for relative errors
=======
	for absolute errors, like gsl_test_rel for relative errors
>>>>>>> config

Fri Oct 23 12:51:01 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* test_results.c (gsl_test_rel): print a shorter "observed vs
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	expected" message if the description is 45 characters or longer
=======
	expected" message if the description is 45 characters or longer
>>>>>>> config

Mon Jun  1 11:02:04 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* gsl_errno.h: added GSL_EUNSUP for errors caused by a hardware
	feature which is not supported on a particular platform

	* renamed test.c to test_results.c to avoid confusion when debugging
	other test programs called test.c

Sat May 30 16:11:34 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* gsl_errno.h: add GSL_ESING for errors caused by singularities
	or other bad function behavior

Fri May 29 14:41:19 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* gsl_errno.h: added GSL_EBADLEN to signify bad lengths of
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	matrices or vectors (e.g. non-conformant sizes in a matrix or
 	vector multiplication)
=======
	matrices or vectors (e.g. non-conformant sizes in a matrix or
	vector multiplication)
>>>>>>> config

Wed May 27 18:15:34 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* test.c (gsl_test_str): changed things so that the strings aren't
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	printed unless the string equality test fails (usually they were
 	too long)
=======
	printed unless the string equality test fails (usually they were
	too long)
>>>>>>> config

Mon May 18 17:58:20 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* test.c (gsl_test_rel): added a test for numerical quantities,
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	given a result, an expected result and an allowable relative
 	error.
=======
	given a result, an expected result and an allowable relative
	error.
>>>>>>> config
	(gsl_test_int): added a test for comparing integers

Sun May 10 16:03:12 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* gsl_errno.h: added GSL_EROUND for roundoff errors

Fri May  8 18:50:13 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* gsl_errno.h: changed GSL_ETIMEOUT to GSL_EMAXITER to describe
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	the error that occurs when a specified number of iterations is
 	exceeded.
=======
	the error that occurs when a specified number of iterations is
	exceeded.
>>>>>>> config

Sun Apr 19 19:14:05 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* strerror.c (gsl_strerror): added an strerror function for making
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	readable descriptions of the error number
=======
	readable descriptions of the error number
>>>>>>> config

Wed Apr 15 21:59:57 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* added a stream handler, for the error stream

	* completely reorganized the files, but the functions are
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	relatively unchanged
=======
	relatively unchanged
>>>>>>> config

Wed Apr  8 13:55:48 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* gsl_errno.h (GSL_ERROR_RETURN_NOTHING): added an error macro
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	suitable for void functions
=======
	suitable for void functions
>>>>>>> config

Mon Apr  6 14:10:48 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* gsl_errno.h: use enum instead of #define for symbolic constants,
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	so that they can be seen in the debugger
=======
	so that they can be seen in the debugger
>>>>>>> config

Sun Apr  5 19:49:17 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* err/errno.c (gsl_error): now takes gsl_errno as an argument
<<<<<<< 2157652494b7e03d4345b81d263b74e6846f75d8
 	(this is useful for doing conditional breakpoints)

=======
	(this is useful for doing conditional breakpoints)
>>>>>>> config
